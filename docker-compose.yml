version: '3'
services:
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:rc"
    volumes:
      - ${HOME_ROOT}/config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    expose: 
      - "8123"
    networks:
      vlan_bridge:
      macvlan:
        ipv4_address: 192.168.160.10
        
  mqtt:
    image: eclipse-mosquitto:latest
    container_name: "mqtt"
    restart: always
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ${HOME_ROOT}/mqtt/data:/mosquitto/data
      - ${HOME_ROOT}/mqtt/config:/mosquitto/config
      - ${HOME_ROOT}/mqtt/log:/mosquitto/log
    environment:
      - TZ=Europe/London
    networks:
      vlan_bridge:
        aliases:
          - core-mosquitto
        
  zigbee2mqtt:
    container_name: zigbee2mqtt
    restart: always
    image: koenkk/zigbee2mqtt:latest
    volumes:
      - ${HOME_ROOT}/zigbee2mqtt:/app/data
      - /run/udev:/run/udev:ro
    depends_on:
      mqtt:
        condition: service_started
    expose:
      - "8080"
    environment:
      - TZ=Europe/London
    networks:
      vlan_bridge:
    
  adguardhome:
    image: adguard/adguardhome
    container_name: adguardhome
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 784:784/udp
      - 853:853/tcp
      - 80:80/tcp
      - 443:443/tcp
    expose:
      - "3000"
    volumes:
      - ${HOME_ROOT}/adguard/workdir:/opt/adguardhome/work
      - ${HOME_ROOT}/adguard/confdir:/opt/adguardhome/con
    networks:
      macvlan:
        ipv4_address: 192.168.160.192
    restart: unless-stopped
    
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    restart: always
    environment:
      - DOCKER_INFLUXDB_INIT_ORG=Lonsdale
      - DOCKER_INFLUXDB_INIT_BUCKET=Home
      - DOCKER_INFLUXDB_INIT_RETENTION=12w
    expose:
      - "8086"
    volumes:
      - ${HOME_ROOT}/influxdb2/data:/var/lib/influxdb2
      - ${HOME_ROOT}/influxdb2/config:/etc/influxdb2
    networks:
      vlan_bridge:
        
  grafana:
   image: grafana/grafana-oss:latest
   container_name: grafana
   restart: always
   depends_on:
     - influxdb
   environment:
     - GF_INSTALL_PLUGINS=
   links:
     - influxdb
   user: "500:1000"
   expose:
     - "3000"
   volumes:
     - ${HOME_ROOT}/grafana:/var/lib/grafana
   networks:
     vlan_bridge:
  
  vikunja_db:
    image: mariadb:10
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - ${HOME_ROOT}/vikunja/db:/var/lib/mysql
    restart: unless-stopped
    networks:
     vlan_bridge:

  vikunja_api:
    image: vikunja/api
    environment:
      VIKUNJA_DATABASE_HOST: vikunja_db
      VIKUNJA_DATABASE_TYPE: mysql
      VIKUNJA_SERVICE_FRONTENDURL: https://todo.lonsdale.house/
    expose:
      - "3456"
    volumes:
      - ${HOME_ROOT}/vikunja/api:/app/vikunja/files
    depends_on:
      - vikunja_db
    restart: unless-stopped
    networks:
     vlan_bridge:
  
  vikunja_frontend:
    image: vikunja/frontend
    expose:
      - "80"
    environment:
      VIKUNJA_API_URL: https://todo.lonsdale.house/api/v1
    restart: unless-stopped
    networks:
     vlan_bridge:

  swag:
    image: lscr.io/linuxserver/swag:latest
    container_name: swag
    restart: unless-stopped
    expose:
      - "443"
      - "80"
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=500
      - PGID=1000
      - TZ=Europe/London
      - URL=lonsdale.house
      - VALIDATION=dns
      - SUBDOMAINS=wildcard
      - DNSPLUGIN=cloudflare
      - PROPAGATION=35
    volumes:
      - ${HOME_ROOT}/swag:/config
    networks:
     vlan_bridge:
    
  frigate:
    image: ghcr.io/blakeblackshear/frigate:stable
    container_name: frigate
    privileged: true
    restart: unless-stopped
    shm_size: "256mb"
    expose:
      - "5000"
      - "1935"
      - "8555"
    environment:
      - TZ=Europe/London
      - NVIDIA_DRIVER_CAPABILITIES=compute,video,utility
      - FLASK_ENV=development
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOME_ROOT}/frigate:/config
      - ${MEDIA_ROOT}/frigate:/media/frigate
      - type: tmpfs
        target: /tmp/cache
        tmpfs:
          size: 1000000000
    networks:
     vlan_bridge:
  
  espresence:
   image: adamlonsdale/espresence-companion:dev
   container_name: espresence-companion
   restart: always
   depends_on:
     - mqtt
   expose:
     - "8276"
   volumes:
     - ${HOME_ROOT}/espresence:/config/espresense
   networks:
     vlan_bridge:

  node-red:
    image: nodered/node-red:latest
    environment:
      - TZ=Europe/London
    expose:
      - "1880"
    volumes:
      - ${HOME_ROOT}/nodered:/data
    networks:
     vlan_bridge:

  whisper:
    container_name: whisper
    command: --model small --language en
    image: rhasspy/wyoming-whisper
    volumes:
      - ${HOME_ROOT}/whisper:/data
    environment:
      - TZ=Europe/London
    restart: unless-stopped
    expose:
      - "10300"
    networks:
     vlan_bridge:

  piper:
    container_name: piper
    image: rhasspy/wyoming-piper
    command: --voice en-gb-southern_english_female-low
    volumes:
      - ${HOME_ROOT}/piper:/data
    environment:
      - TZ=Europe/London
    restart: unless-stopped
    expose:
      - "10200"
    networks:
      vlan_bridge:

  music-assistant:
    container_name: musicassistant
    image: "registry.lonsdale.house/musicassistantserver"
    volumes:
      - ${HOME_ROOT}/musicassistant:/data
      - ${MUSIC_ROOT}:/media
    restart: unless-stopped
    privileged: true
    ports:
      - 8095:8095
    cap_add:
      - SYS_ADMIN
      - DAC_READ_SEARCH
    networks:
      vlan_bridge:
      macvlan:
        ipv4_address: 192.168.160.11

  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - ${HOME_ROOT}/redis/data:/data
    networks:
     vlan_bridge:

  paperless_db:
    image: docker.io/library/mariadb:10
    restart: unless-stopped
    volumes:
      - ${HOME_ROOT}/paperless/dbdata:/var/lib/mysql
    networks:
     vlan_bridge:

  paperless_ui:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - paperless_db
      - broker
      - gotenberg
      - tika
    expose:
      - "8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ${HOME_ROOT}/paperless/data:/usr/src/paperless/data
      - ${HOME_ROOT}/paperless/media:/usr/src/paperless/media
      - ${HOME_ROOT}/paperless/export:/usr/src/paperless/export
      - ${HOME_ROOT}/paperless/consume:/usr/src/paperless/consume
    networks:
     vlan_bridge:

  gotenberg:
    image: docker.io/gotenberg/gotenberg:7.8
    restart: unless-stopped
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    networks:
     vlan_bridge:

  tika:
    image: ghcr.io/paperless-ngx/tika:latest
    restart: unless-stopped
    networks:
     vlan_bridge:
  
networks:
  macvlan:
    name: docker_macvlan
    driver: macvlan
    enable_ipv6: false
    driver_opts:
      parent: br0
    ipam:
      config:
        - subnet: 192.168.160.0/24
          ip_range: 192.168.160.192/27
          gateway: 192.168.160.1
  vlan_bridge:
    name: home_vlan
    driver: bridge
    enable_ipv6: false
    ipam:
      config:
        - subnet: 172.22.0.0/16
          ip_range: 172.22.1.0/24
          gateway: 172.22.0.1
