version: '3'
services:
  find3:
    container_name: find3
    image: adamlonsdale/find3:latest
    restart: always
    volumes:
      - ${FIND3_DATA}:/data:rw,slave
    environment:
      - MQTT_SERVER=mqtt:1883
      - MQTT_ADMIN=${MQTT_ADMIN}
      - MQTT_PASS=${MQTT_PASS}
    depends_on:
      mqtt:
        condition: service_started
    # Expose the port 1883 to the internal docker network for bridging to the mqtt container
    expose:
      - "1883"
    ports:
      - "0.0.0.0:8003:8003"
    networks:
      vlan_bridge:
        ipv4_address: 172.22.0.198
        
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ${HASS_CONFIG}:/config:rw,slave
      - ${LOCALTIME}:/etc/localtime:ro
    restart: unless-stopped
    ports:
      - 127.22.0.192:8123:8123
    networks:
      vlan_bridge:
        ipv4_address: 172.22.0.197
      macvlan:
        ipv4_address: 192.168.150.10
        
  mqtt:
    image: eclipse-mosquitto:latest
    container_name: "mqtt"
    restart: always
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ${MQTT_DATA}:/mosquitto/data:rw,slave
      - ${MQTT_CONFIG}:/mosquitto/config:rw,slave
      - ${MQTT_LOG}:/mosquitto/log:rw,slave
    environment:
      - TZ=Europe/London
    networks:
      vlan_bridge:
        ipv4_address: 172.22.0.196
        aliases:
          - core-mosquitto
        
  zigbee2mqtt:
    container_name: zigbee2mqtt
    restart: always
    image: koenkk/zigbee2mqtt:latest
    volumes:
      - ${ZIGBEE2MQTT_DATA}:/app/data
      - ${RUN_UDEV}:/run/udev:ro
    depends_on:
      mqtt:
        condition: service_started
    expose:
      - "8080"
    ports:
      - 8081:8080
    environment:
      - TZ=Europe/London
    networks:
      vlan_bridge:
        ipv4_address: 172.22.0.199
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    
  adguardhome:
    image: adguard/adguardhome
    container_name: adguardhome
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 784:784/udp
      - 853:853/tcp
      - 80:80/tcp
      - 443:443/tcp
    expose:
      - "3000"
    volumes:
      - ${ADGUARD_WORKDIR}:/opt/adguardhome/work:rw,slave
      - ${ADGUARD_CONFDIR}:/opt/adguardhome/conf:rw,slave
    networks:
      macvlan:
        ipv4_address: 192.168.150.192
    restart: unless-stopped
    
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    restart: always
    environment:
      - INFLUXDB_DB=influx
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
    expose:
      - "3006"
    volumes:
      - ${INFLUXDB_DATA}:/var/lib/influxdb:rw,slave
    networks:
      vlan_bridge:
        ipv4_address: 172.22.0.194
        
  grafana:
   image: grafana/grafana
   container_name: grafana-server
   restart: always
   depends_on:
     - influxdb
   environment:
     - GF_INSTALL_PLUGINS=
     - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
     - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
   links:
     - influxdb
   ports:
     - '3000:3000'
   volumes:
     - ${GRAFANA_DATA}:/var/lib/grafana:rw,slave
   networks:
     vlan_bridge:
        ipv4_address: 172.22.0.193
  
  presencelight:
    image: isaaclevin/presencelight
    container_name: presencelight
    restart: always
  ports:
    - 5000:80
    - 5001:443
  volumes:
    ${PRESENCELIGHT_DATA}/https:/https
  environment:
    ASPNETCORE_HTTPS_PORT: "5001"
    ASPNETCORE_URLS: "https://+;http://+"
    ASPNETCORE_Kestrel__Certificates__Default__Password: "presencelight"
    ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/presencelight.pfx"
  networks:
     vlan_bridge:
        ipv4_address: 172.22.0.200

  swag:
    image: lscr.io/linuxserver/swag:latest
    container_name: swag
    restart: unless-stopped
    ports:
      - '443:443'
      - '80:80'
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/London
      - URL=lonsdale.social
      - VALIDATION=http
      - SUBDOMAINS=www,home,vpn,docker
      - DNSPLUGIN=cloudflare
      - ONLY_SUBDOMAINS=true
    volumes:
      - ${SWAG_DATA}:/config
    networks:
     vlan_bridge:
        ipv4_address: 172.22.0.195
        
networks:
  macvlan:
    name: docker_macvlan
    driver: macvlan
    enable_ipv6: false
    driver_opts:
      parent: ${NETWORK_INTERFACE}
    ipam:
      config:
        - subnet: 192.168.150.0/24
          ip_range: 192.168.150.192/27
          gateway: 192.168.150.1
  vlan_bridge:
    name: home_vlan
    driver: bridge
    enable_ipv6: false
    ipam:
      config:
        - subnet: 172.22.0.0/24
          ip_range: 172.22.0.192/26
          gateway: 172.22.0.1
