version: '3'
services:
  find3:
    container_name: find3
    image: adamlonsdale/find3:latest
    restart: always
    volumes:
      - "./find3/data:/data"
    environment:
      MQTT_SERVER: 'mqtt:1883'
    depends_on:
      mqtt:
        condition: service_started
    # Expose the port 1883 to the internal docker network for bridging to the mqtt container
    expose:
      - "1883"
    ports:
      - "0.0.0.0:8003:8003"
    networks:
      vlan_bridge:
        ipv4_address: 172.22.0.198
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ./config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    ports:
      - "8123:8123"
    networks:
      vlan_bridge:
        ipv4_address: 172.22.0.197
  mqtt:
    image: eclipse-mosquitto:latest
    container_name: "mqtt"
    restart: always
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/config:/mosquitto/config
      - ./mqtt/log:/mosquitto/log
    environment:
      - TZ=Europe/London
    networks:
      vlan_bridge:
        ipv4_address: 172.22.0.196
  zigbee2mqtt:
    container_name: zigbee2mqtt
    restart: always
    image: koenkk/zigbee2mqtt:latest
    volumes:
      - ./zigbee2mqtt:/app/data
      - /run/udev:/run/udev:ro
    depends_on:
      mqtt:
        condition: service_started
    ports:
      - "127.0.0.1:8080:8080"
    environment:
      - TZ=Europe/London
    networks:
      vlan_bridge:
        ipv4_address: 172.22.0.199
    #devices:
    #  - /dev/tty.usbserial-0001:/dev/ttyUSB0
  adguardhome:
    image: adguard/adguardhome
    container_name: adguardhome
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 784:784/udp
      - 853:853/tcp
      - 80:80/tcp
      - 443:443/tcp
    expose:
      - "3000"
    volumes:
      - ./adguard/workdir:/opt/adguardhome/work
      - ./adguard/confdir:/opt/adguardhome/conf
    networks:
      macvlan:
        ipv4_address: 192.168.150.192
      vlan_bridge:
        ipv4_address: 172.22.0.192
    restart: unless-stopped
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    restart: always
    environment:
      - INFLUXDB_DB=influx
    expose:
      - "3006"
    volumes:
      - ./influxdb:/var/lib/influxdb
    networks:
      vlan_bridge:
        ipv4_address: 172.22.0.194
  grafana:
   image: grafana/grafana
   container_name: grafana-server
   restart: always
   depends_on:
     - influxdb
   environment:
     - GF_INSTALL_PLUGINS=
   links:
     - influxdb
   ports:
     - '3000:3000'
   volumes:
     - ./grafana:/var/lib/grafana
   networks:
     vlan_bridge:
        ipv4_address: 172.22.0.193
networks:
  macvlan:
    name: docker_macvlan
    driver: macvlan
    enable_ipv6: false
    driver_opts:
      parent: ${NETWORK_INTERFACE}
    ipam:
      config:
        - subnet: 192.168.150.0/24
          ip_range: 192.168.150.192/27
          gateway: 192.168.150.1
  vlan_bridge:
    name: home_vlan
    driver: bridge
    enable_ipv6: false
    ipam:
      config:
        - subnet: 172.22.0.0/24
          ip_range: 172.22.0.192/26
          gateway: 172.22.0.1
